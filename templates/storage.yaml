{{- if not .Values.useExistingNFS }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-claim
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-10"
    # Need to check on ordering ?? "helm.sh/hook-delete-policy": hook-succeeded
spec:
  storageClassName: {{ .Values.storage.storageClass }}
  accessModes:
    - {{ .Values.storage.accessModes }}
  resources:
    requests:
      storage: 50Gi
{{- end }}
{{- if .Values.useExistingNFS }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-volume
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    storage: nfs
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-10"
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 100Gi
  nfs:
    path: {{ .Values.nfs.export }}
    server: {{ .Values.nfs.server }}
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-claim
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-10"
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  selector:
    matchLabels:
      storage: nfs
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: {{ .Release.Name }}-volume
{{- end }}